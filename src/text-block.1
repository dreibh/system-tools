.\"         ____            _                     _____           _
.\"        / ___| _   _ ___| |_ ___ _ __ ___     |_   _|__   ___ | |___
.\"        \___ \| | | / __| __/ _ \ '_ ` _ \ _____| |/ _ \ / _ \| / __|
.\"         ___) | |_| \__ \ ||  __/ | | | | |_____| | (_) | (_) | \__ \
.\"        |____/ \__, |___/\__\___|_| |_| |_|     |_|\___/ \___/|_|___/
.\"               |___/
.\"                             --- System-Tools ---
.\"                  https://www.nntb.no/~dreibh/system-tools/
.\" ==========================================================================
.\"
.\" Text-Block
.\" Copyright (C) 2025 by Thomas Dreibholz
.\"
.\" This program is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, either version 3 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.\" Contact: thomas.dreibholz@gmail.com
.\"
.\" -------------------------------------------------------------------------
.\" Manpage syntax help:
.\" * https://man.freebsd.org/cgi/man.cgi?mdoc(7)
.\" * https://freebsdfoundation.org/wp-content/uploads/2019/03/Writing-Manual-Pages.pdf
.\" * https://forums.freebsd.org/threads/howto-create-a-manpage-from-scratch.13200/
.\" * man mandoc_char
.\" -------------------------------------------------------------------------
.\"
.\" ###### Setup ############################################################
.Dd April 6, 2025
.Dt text-block 1
.Os text-block
.\" ###### Name #############################################################
.Sh NAME
.Nm text-block
.Nd reads text from standard input or given file, and writes it to standard output or a given file. On the text, various modifications can be applied, according to the operation mode.
.\" ###### Synopsis #########################################################
.Sh SYNOPSIS
.Nm text-block
.Op Fl C | Fl Fl cat
.Op OPTIONS
.Nm text-block
.Op Fl 0 | Fl Fl discard
.Op OPTIONS
.Nm text-block
.Op Fl H | Fl Fl highlight
.Op OPTIONS
.Nm text-block
.Op Fl E | Fl Fl enumerate
.Op OPTIONS
.Nm text-block
.Op Fl X | Fl Fl extract
.Op OPTIONS
.Nm text-block
.Op Fl D | Fl Fl delete | Fl Fl remove
.Op OPTIONS
.Nm text-block
.Op Fl F Ar insert_file | Fl Fl insert-front Ar insert_file
.Op OPTIONS
.Nm text-block
.Op Fl B Ar insert_file | Fl Fl insert-back Ar insert_file
.Op OPTIONS
.Nm text-block
.Op Fl R Ar insert_file | Fl Fl replace Ar insert_file
.Op OPTIONS
.Nm text-block
.Op Fl h | Fl Fl help
.Nm text-block
.Op Fl v | Fl Fl version
.Pp
.Nm OPTIONS:
.Op Fl b Ar begin_tag | Fl Fl begin-tag Ar begin_tag
.Op Fl e Ar end_tag | Fl Fl end-tag Ar end_tag
.Op Fl i | Fl Fl input Ar input_file
.Op Fl o | Fl Fl output Ar output_file
.Op Fl a | Fl Fl append
.Op Fl s | Fl Fl select Ar from_line Ar to_line
.Op Fl b | Fl Fl begin-tag Ar begin_tag
.Op Fl e | Fl Fl end-tag Ar end_tag
.Op Fl t | Fl Fl tag Ar tag
.Op Fl y | Fl Fl include-tags
.Op Fl x | Fl Fl exclude-tags
.Op Fl f | Fl Fl full-tag-lines
.Op Fl g | Fl Fl tags-only
.Op Fl q | Fl Fl suppress-warnings
.Op Fl Fl enumerate-format Ar format
.Op Fl Fl enumerate-label1 Ar string
.Op Fl Fl enumerate-label2 Ar string
.Op Fl Fl highlight-begin Ar string
.Op Fl Fl highlight-end Ar string
.Op Fl Fl highlight-unmarked1 Ar string
.Op Fl Fl highlight-unmarked2 Ar string
.Op Fl Fl highlight-marked1 Ar string
.Op Fl Fl highlight-marked2 Ar string
.Op Fl Fl highlight-param Fl begin_label Fl end_label Fl unmarked1_label Fl unmarked2_label Fl marked1_label Fl marked2_label
.\" ###### Description ######################################################
.Sh DESCRIPTION
.Nm text-block
.Nd reads text from standard input or given file, and writes it to standard output or a given file. On the text, various modifications can be applied, according to the operation mode:
.Bl -bullet
.It
Cat: copy the input text as-is.
.It
Discard: do nothing (i.e. just discard the input).
.It
Enumerate: add line numbers. The format of the enumeration is configurable.
.It
Highlight: visually highlight text block between markers. The format of the marking is configurable, e.g. to apply ANSI colouring, etc.
.It
Delete: remove text between markers.
.It
Insert Front: insert text from a file at front of marked blocks.
.It
Insert Back: insert text from a file at back of marked blocks.
.It
Replace: replace text of marked blocks by text from a file.
.El
.Pp
The marking used for the operation modes is based on configurable begin and end tags, e.g. <BEGIN-OF-BLOCK> and <END-OF-BLOCK>, or BEGIN and END. The handling of tags is configurable:
.Bl -bullet
.It
tags-only: Only the text between the marker tags belongs to a block. That is, multiple blocks can appear on the same line. This is the default.
.It
full-tag-lines: A marker includes the full line of is begin and end tags. That is, a line containing a begin/end tag is handled like being the begin/end tag. This also means that only the \f[B]first\f[R] tag in a line is handled. All further tags in the same line are ignored!
Hint: Use Highlight mode to visualise the behaviour.
.El
.Pp
Furthermore, the handling of begin/end tags is configurable as well:
.Bl -bullet
.It
exclude-tags: Marked text does not include the begin/end tags. This is the default.
.It
include-tags: Marked text includes the begin/end tags.
.El
.Pp
A special case is to have identical begin/end tags, e.g. <MARKER>. The text block "inside" this tag is therefore always empty. A use case for such a marker is e.g. to mark where to insert the contents of a file.
.Pp
Alternatively to marking by tags, the marking can be based on a line number
range selection. Negative line numbers denote counting backwards from the end
of the file, which in this case needs to be line-counted first. That is, input
from standard input is not possible in this case.
.Pp
.\" ###### Arguments ########################################################
.Sh ARGUMENTS
The following options are available:
.Bl -tag -width indent
.It Fl C | Fl Fl cat
Run in Cat mode (default).
.It Fl 0 | Fl Fl discard
Run in Discard mode.
.It Fl H | Fl Fl highlight
Run in Highlight mode.
.It Fl E | Fl Fl enumerate
Run in Enumerate mode.
.It Fl X | Fl Fl extract
Run in Highlight mode.
.It Fl D | Fl Fl delete | Fl Fl remove
Run in Delete mode.
.It Fl F Ar insert_file | Fl Fl insert-front Ar insert_file
Run in Insert-Front mode.
.It Fl B Ar insert_file | Fl Fl insert-back Ar insert_file
Run in Insert-Back mode.
.It Fl R Ar insert_file | Fl Fl replace Ar insert_file
Run in Replace mode.
.It Fl h | Fl Fl help
Prints command-line parameters.
.It Fl v | Fl Fl version
Prints program version.
.It Fl s | Fl Fl select Ar from_line Ar to_line
Select a line range, ranging from line from_line to line to_line.
A from_line of one (1) denotes marking from start of the file.
A to_line of zero (0) denotes marking until end of the file.
If a line number is negative, it is counted backwards from the end of the
file. This requires an input file (--input|-i), which is line-counted
first. Line range selection is mutually exclusive with tags
(--begin-tag|-b|--end-tag|--tag|-t).
.It Fl b Ar begin_tag | Fl Fl begin-tag Ar begin_tag
Sets the begin tag.
Tags are mutually exclusive with line selection (--select|-s).
.It Fl e Ar end_tag | Fl Fl end-tag Ar end_tag
Sets the end tag.
Tags are mutually exclusive with line selection (--select|-s).
.It Fl t Ar tag | Fl Fl tag Ar tag
Sets a combined begin/end tag, i.e. the tag marks begin and end.
Tags are mutually exclusive with line selection (--select|-s).
.It Fl i | Fl Fl input Ar input_file
Sets the input file.
.It Fl o | Fl Fl output Ar output_file
Sets the output file. By default, an existing output file will be overwritten.
.It Fl a | Fl Fl append
Opens the output file in append mode, appending new output instead of overwriting an existing file.
.It Fl y | Fl Fl include-tags
Include the marker tags in the marking.
Hint: Use Highlight mode to visualise the behaviour.
.It Fl x | Fl Fl exclude-tags
Exclude the marker tags from the marking.
Hint: Use Highlight mode to visualise the behaviour.
.It Fl f | Fl Fl full-tag-lines
Include full marker tag lines in the marking.
Hint: Use Highlight mode to visualise the behaviour.
.It Fl g | Fl Fl tags-only
Exclude the marker tag lines from the marking.
Hint: Use Highlight mode to visualise the behaviour.
.It Fl q | Fl Fl suppress-warnings
Suppress warnings on useless input parameters. Useful for debugging.
.It Fl Fl enumerate-format Ar format
In Enumerate mode, sets the format of the line number output according to printf formatting. However, only the number format specification is allowed here. Examples:
.Bl -bullet
.It
06 -> add leading zero to get a 6-digit output (e.g. "000001", etc.). This is the default.
.It
4 -> 4-digit line numbers, prepended with space when necessary (e.g. "   2", etc.).
.It
-4 -> left-adjusted 4-digit number (e.g. "3   ").
.El
.It Fl Fl enumerate-label1 Ar string
For Enumerate mode: prepends the given string before the line number output. Default: $\[aq]\ex1b[36m\[aq] (enables cyan colour output).
.It Fl Fl enumerate-label2 Ar string
For Enumerate mode: appends the given string before the line number output. Default: $\[aq]\ex1b[0m \[aq] (disables colour output, and add a space).
.It Fl Fl highlight-begin Ar string
For Highlight mode: Sets string to visualise the begin of a marked block. Default: ‚≠ê.
.It Fl Fl highlight-end Ar string
For Highlight mode: Sets string to visualise the end of a marked block. Default: üõë.
.It Fl Fl highlight-unmarked1 Ar string
For Highlight mode: Sets string to visualise the begin of an unmarked text fragment. Default: $\[aq]\ex1b[34m\[aq] (enables blue colour output).
.It Fl Fl highlight-unmarked2 Ar string
For Highlight mode: Sets string to visualise the end of an unmarked text fragment. Default: $\[aq]\ex1b[0m \[aq] (disables colour output).
.It Fl Fl highlight-marked1 Ar string
For Highlight mode: Sets string to visualise the begin of a marked text fragment. Default: $\[aq]\ex1b[31m\[aq]
(enables red colour output).
.It Fl Fl highlight-marked2 Ar string
For Highlight mode: Sets string to visualise the end of a marked text fragment. Default: $\[aq]\ex1b[0m \[aq] (disables colour output).
.It Fl Fl highlight-param Fl begin_label Fl end_label Fl unmarked1_label Fl unmarked2_label Fl marked1_label Fl marked2_label
A shortcut to set all 6 highlight parameters at once.
.El
.\" ###### Examples #########################################################
.Sh EXAMPLES
Note: the example input files example1.txt, example2.txt, and insert.txt,
referred to in the following command-line examples, are usually installed
under /usr/share/text-block or /usr/local/share/text-block/!
.Ss Cat Mode
.Bl -bullet
.It
text-block -i example1.txt --cat
.It
text-block -i /etc/system-info.d/01-example
.It
text-block -i /etc/system-info.d/01-example -C
.El
.Ss Enumerate Mode
.Bl -bullet
.It
text-block -i example1.txt --enumerate
.It
figlet \[dq]Test!\[dq] | text-block -E
.It
text-block -i /etc/system-info.d/01-example -E
.It
text-block -i /etc/system-info.d/01-example --enumerate --enumerate-format \[dq]6\[dq] --enumerate-label1 $\[aq]\ex1b[37m<\[aq] --enumerate-label2 $\[aq]>\ex1b[0m \[aq]
.El
.Ss Highlight Mode
.Bl -bullet
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' --highlight
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' -H --exclude-tags --tags-only
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' -H --include-tags --tags-only
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' -H --include-tags --full-tag-lines
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' -H --exclude-tags --full-tag-lines
.It
text-block -i example2.txt -b '<MARKER>' -H --exclude-tags --tags-only
.It
text-block -i example2.txt -b '<MARKER>' -H --include-tags --tags-only
.It
text-block -i example2.txt -b '<MARKER>' -H --include-tags --full-tag-lines
.It
text-block -i example2.txt -b '<MARKER>' -H --exclude-tags --full-tag-lines
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' --highlight --highlight-param "‚òÄ" "üåô" $\[aq]\e[32m' $\[aq]\e[0m' $\[aq]\e[31;5m' $\[aq]\e[0m'
.It
text-block -i numbers.txt --select 1 3 -H
.It
text-block -i numbers.txt --select -3 -1 -H
.El
.Ss Delete Mode
.Bl -bullet
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' --delete
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' -D
.El
.Ss Insert Front Mode
.Bl -bullet
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' --insert-front insert.txt
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' -F insert.txt
.El
.Ss Insert Back Mode
.Bl -bullet
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' --insert-back insert.txt
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' -B insert.txt
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' -F insert.txt -f
.El
.Ss Replace Mode
.Bl -bullet
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' --replace insert.txt
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' --replace insert.txt --include-tags
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' --replace insert.txt --include-tags --full-tag-lines
.It
text-block -i example1.txt -b '<BEGIN-BLOCK>' -e '<END-BLOCK>' -R insert.txt -gy
.El
.Ss Other Examples
.Bl -bullet
.It
text-block --help
.It
text-block --version
.It
text-block --v
.El
